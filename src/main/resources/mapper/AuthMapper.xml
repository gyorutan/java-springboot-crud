<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tpi.springboot.crud.demo.mapper.AuthMapper">
    <insert id="insertUser" parameterType="com.tpi.springboot.crud.demo.domain.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            users (username, password)
        VALUES
            (#{username}, #{password})
    </insert>

    <select id="selectUserByUsername" parameterType="String" resultType="com.tpi.springboot.crud.demo.domain.User">
        SELECT
            id,
            username,
            password
        FROM
            users
        WHERE
            username = #{username}
    </select>

    <insert id="insertRefreshToken" parameterType="com.tpi.springboot.crud.demo.domain.RefreshToken" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            refresh_tokens (user_id, token, issued_at, expires_at, revoked)
        VALUES
            (#{userId}, #{token}, #{issuedAt}, #{expiresAt}, #{revoked})
    </insert>

    <select id="selectTokenByUserId" parameterType="Long" resultType="com.tpi.springboot.crud.demo.domain.RefreshToken">
        SELECT
            id,
            user_id,
            token,
            issued_at,
            expires_at,
            revoked
        FROM
            refresh_tokens
        WHERE
            user_id = #{userId}
    </select>

    <select id="selectTokenByToken" parameterType="String" resultType="com.tpi.springboot.crud.demo.domain.RefreshToken">
        SELECT
            id,
            user_id,
            token,
            issued_at,
            expires_at,
            revoked
        FROM
            refresh_tokens
        WHERE
            token = #{token}
    </select>

    <update id="updateRefreshToken" parameterType="com.tpi.springboot.crud.demo.domain.RefreshToken">
        UPDATE
            refresh_tokens
        SET
            token = #{token},
            issued_at = #{issuedAt},
            expires_at = #{expiresAt},
            revoked = #{revoked}
        WHERE
            id = #{id}
    </update>

    <update id="updateRefreshTokenStatus">
        UPDATE
            refresh_tokens
        SET
            revoked = #{revoked}
        WHERE
            token = #{token}
    </update>

    <delete id="deleteRefreshTokenByToken" parameterType="String">
        DELETE FROM
            refresh_tokens
        WHERE
            token = #{token}
    </delete>

    <delete id="deleteAllRefreshTokenByUserId" parameterType="Long">
        DELETE FROM
            refresh_tokens
        WHERE
            user_id = #{userId}
    </delete>
</mapper>